import numpy as np
'''
elements=np.array([[0 ,1 ,0 ,1],
                  [0 ,1, 0 ,0],
                  [1 ,0, 0, 1],
                  [0 ,0, 1 ,0],
                  [0 ,0 ,1 ,0],
                  [1 ,0 ,0 ,0]])
'''
with_hash=[['inf' ,'inf' ,'inf' ,'inf'],
           ['inf' ,'inf', 'inf' ,'inf'],
           ['inf' ,'inf', 'inf', 'inf']]
h1=[]
h2=[]
h3=[]
for x in range(len(elements)):
  H_1 = (2 * x + 1) % 43
  H_2 = (3 * x+2) % 43
  H_3 = (5*x+2 )% 43
  h1.append(H_1)
  h2.append(H_2)
  h3.append(H_3)
print('H1 H2 H3')

for i in range(len(elements)):
  print(h1[i],h2[i],h3[i])
print('\n\n')
count=0
indices=[]
for i in range(len(elements)):
  indices.append([index for index, value in enumerate(elements[i]) if value == 1])


k = [[i for _ in range(len(item))] for i, item in enumerate(indices, start=1)]
indextochange=[]
for i in indices:
  for j in i:
    indextochange.append(j)

print('k',k)
loop=[]
for i in k:
  for j in i:
    loop.append(j-1)
print("loop",loop)
print('index',indextochange)
cc=2
print('\n\n\n')


for p,q in zip(loop,indextochange):
  for x in range(3):
    if isinstance(with_hash[x][q], str):
      if x == 0:
        with_hash[x][q]=int(h1[p])
      elif x == 1:
        with_hash[x][q]=int(h2[p])
      elif x == 2:
        with_hash[x][q]=int(h3[p])
    else:
      if x==0 and with_hash[x][q]> h1[p]:
        with_hash[x][q]=h1[p]
      elif x==1 and with_hash[x][q] > h2[p]:
        with_hash[x][q]=h2[p]
      elif x==2 and with_hash[x][q]> h3[p]:
        with_hash[x][q]=h3[p]
      else:
        pass


  for i, row in enumerate(with_hash):
    print(f'H{i+1} {row}')
    if (i + 1) % 3 == 0:
        print()


def print_nested_list(nested_list):
    for item in nested_list:
        if isinstance(item, list):
            print_nested_list(item)
        else:
            print(item)
